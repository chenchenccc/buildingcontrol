package com.building.dao.impl;

import com.building.dao.ifc.RoleHasBuildingDAO;
import com.building.model.RoleHasBuilding;
import com.building.model.RoleHasBuildingExample;
import java.util.List;
import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

public class RoleHasBuildingDAOImpl extends SqlMapClientDaoSupport implements RoleHasBuildingDAO {

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table role_has_building
     *
     * @ibatorgenerated Tue May 26 21:29:16 CST 2015
     */
    public RoleHasBuildingDAOImpl() {
        super();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table role_has_building
     *
     * @ibatorgenerated Tue May 26 21:29:16 CST 2015
     */
    public int countByExample(RoleHasBuildingExample example) {
        Integer count = (Integer)  getSqlMapClientTemplate().queryForObject("role_has_building.ibatorgenerated_countByExample", example);
        return count.intValue();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table role_has_building
     *
     * @ibatorgenerated Tue May 26 21:29:16 CST 2015
     */
    public int deleteByExample(RoleHasBuildingExample example) {
        int rows = getSqlMapClientTemplate().delete("role_has_building.ibatorgenerated_deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table role_has_building
     *
     * @ibatorgenerated Tue May 26 21:29:16 CST 2015
     */
    public int deleteByPrimaryKey(Integer id) {
        RoleHasBuilding key = new RoleHasBuilding();
        key.setId(id);
        int rows = getSqlMapClientTemplate().delete("role_has_building.ibatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table role_has_building
     *
     * @ibatorgenerated Tue May 26 21:29:16 CST 2015
     */
    public void insert(RoleHasBuilding record) {
        getSqlMapClientTemplate().insert("role_has_building.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table role_has_building
     *
     * @ibatorgenerated Tue May 26 21:29:16 CST 2015
     */
    public void insertSelective(RoleHasBuilding record) {
        getSqlMapClientTemplate().insert("role_has_building.ibatorgenerated_insertSelective", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table role_has_building
     *
     * @ibatorgenerated Tue May 26 21:29:16 CST 2015
     */
    public List selectByExample(RoleHasBuildingExample example) {
        List list = getSqlMapClientTemplate().queryForList("role_has_building.ibatorgenerated_selectByExample", example);
        return list;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table role_has_building
     *
     * @ibatorgenerated Tue May 26 21:29:16 CST 2015
     */
    public RoleHasBuilding selectByPrimaryKey(Integer id) {
        RoleHasBuilding key = new RoleHasBuilding();
        key.setId(id);
        RoleHasBuilding record = (RoleHasBuilding) getSqlMapClientTemplate().queryForObject("role_has_building.ibatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table role_has_building
     *
     * @ibatorgenerated Tue May 26 21:29:16 CST 2015
     */
    public int updateByExampleSelective(RoleHasBuilding record, RoleHasBuildingExample example) {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("role_has_building.ibatorgenerated_updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table role_has_building
     *
     * @ibatorgenerated Tue May 26 21:29:16 CST 2015
     */
    public int updateByExample(RoleHasBuilding record, RoleHasBuildingExample example) {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("role_has_building.ibatorgenerated_updateByExample", parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table role_has_building
     *
     * @ibatorgenerated Tue May 26 21:29:16 CST 2015
     */
    public int updateByPrimaryKeySelective(RoleHasBuilding record) {
        int rows = getSqlMapClientTemplate().update("role_has_building.ibatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table role_has_building
     *
     * @ibatorgenerated Tue May 26 21:29:16 CST 2015
     */
    public int updateByPrimaryKey(RoleHasBuilding record) {
        int rows = getSqlMapClientTemplate().update("role_has_building.ibatorgenerated_updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table role_has_building
     *
     * @ibatorgenerated Tue May 26 21:29:16 CST 2015
     */
    private static class UpdateByExampleParms extends RoleHasBuildingExample {
        private Object record;

        public UpdateByExampleParms(Object record, RoleHasBuildingExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }
}